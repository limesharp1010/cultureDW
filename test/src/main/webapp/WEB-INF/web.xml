<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>test</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.ico</url-pattern>
</servlet-mapping>
<!-- login처리, 보안처리할 때 리스너 등록 -->
<context-param>
<param-name>contextConfigLocation</param-name>
<param-value>
/WEB-INF/spring-security.xml,/WEB-INF/spring-mvc-config.xml</param-value>
</context-param>
<!-- xml파일은 spring bean cofig파일, 두개 존재해함 -->
<!-- 위의 설정파일을 실행하기 위해서 리스너를 등록 -->
<listener>
<listener-class>
org.springframework.web.context.ContextLoaderListener
</listener-class>
</listener>

<!-- url처리는  DispatcherServlet 등록 -->
<!-- 서블릿을 등록하면서 반드시 생성해야하는 설정파일 WEB-INF/dispatcher-servlet.xml -->
<!-- 서블릿의 시작은 동작이 일어날 때 메모리에 로드되지만 
등록시 서블릿을 실행하기 위해서는 load-on-startup 처리 -->
<!-- 서블릿 등록파일을 다른이름으로 처리하기 위해서는 init-param등록 -->
<servlet>
<servlet-name>dispatcher</servlet-name>
<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<init-param>
<param-name>contextConfigLocation</param-name>
<param-value></param-value>
</init-param>
<load-on-startup>1</load-on-startup>
</servlet>

<servlet-mapping>
<servlet-name>dispatcher</servlet-name>
<url-pattern>/</url-pattern>
</servlet-mapping>

<!-- spring filter처리 : 
mapping url처리, filter or servlet 클래스로드-->
<filter>
<filter-name>springSecurityFilterChain</filter-name>
<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
</filter>

<filter-mapping>
<filter-name>springSecurityFilterChain</filter-name>
<url-pattern>/*</url-pattern>
</filter-mapping>
</web-app>





